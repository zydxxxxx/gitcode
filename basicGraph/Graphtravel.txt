基本图算法之图的遍历
深度优先的非递归方式：https://en.wikipedia.org/wiki/Depth-first_search
深度优先实验结果对比：
   本文主要是针对"uniprot150m.txt",数据集，节点数为25037600。
   dfs(递归式)运行时间为314ms。
   dfs(非递归式)(使用的是自己定义的存节点的栈)运行时间为481ms。
   dfs(非递归式)(使用的是自己定义的数组存数字的栈)运行时间为387ms。
   同学的算法(非递归式)：
        思路：访问到一个节点将其标记后入栈，再去访问相邻的、未访问的第一个节点。
             到所有的邻接的节点都被访问，此节点出栈。
        缺点：这种写法的时间消耗必定要长;
   主要是就因为我们从栈中出来之后都是从当前顶点撒向的第一条边开始
   描的，也就是说每条边我们都要访问多次，不仅仅是一次，所以在实际跑程序的时候
   耗的时间要长的多久运行时间为912ms
   对他算法STLstack栈进行改进时间为862ms。没有得到很大的提高。
   其算法对他进行自定义简单存数字的栈改进时间为260ms与上述相差无几。
广度优先实验结果对比：
   同学的算法stl队列运行时间为428ms（我电脑上为686）
            自定义队列运行时间为334ms（我电脑上为743）
   我的STL队列运行时间为641ms（他的cpu的运行时间比我快1/3）
   自定义的队列运行时间为700ms
   原因为标记方式的不同我的运行时间看不出自定义队列速度更快
